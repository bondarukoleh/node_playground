Terms:
Layer - A slice of related networking protocols that represents a logical group. The application
layer, where we work, is the highest level; physical is the lowest.
HTTP  Hypertext Transfer Protocol—An application-layer client-server protocol built on TCP.
TCP - Transmission Control Protocol—Allows communication in both directions from the client to
the server, and is built on to create application-layer protocols like HTTP.
UDP - User Datagram Protocol—A lightweight protocol, typically chosen where speed is desired
over reliability.
Socket - The combination of an IP address and a port number is generally referred to as a socket.
Packet - TCP packets are also known as segments—the combination of a chunk of data along with
a header.
Datagram - The UDP equivalent of a packet.
MTU - Maximum Transmission Unit—The largest size of a protocol data unit.

Socket
The combination of a port number and an address is known as a socket. And there are both TCP and UDP sockets.

In Node, you can create TCP sockets with the net module, and UDP is supported by
the dgram module.

Encrypted TCP connections use TLS:
Transport Layer Security. Node’s tls module is implemented using OpenSSL.
This type of encryption is called public key cryptography. Both clients and servers
must have private keys. The server can then make its public key available so clients can encrypt messages.
To decrypt these messages, access to the server’s private key is required.

UDP. Duplex, sending a datagram requires a buffer for the payload, an offset to indicate where in the buffer
the message starts, the message length, the server port, the remote IP, and an optional
callback that will be triggered when the message has been sent:
var message = 'Sample message';
socket.send(new Buffer(message), 0, message.length, port, remoteIP);

UDP packets are comparatively simple. They’re composed of a source port, the destination
port, datagram length, checksum, and the payload data. The length is the total
size of the packet—the header size added to the payload’s size. When deciding
on your application’s buffer size for UDP packets, you should remember that the
length passed to socket.send is only for the buffer (payload), and the overall packet
size must be under the MTU on the network. The structure of a datagram looks like
the following.

TCP, duplex, connections are different from UDP, and this is apparent in the design of Node’s
networking API. TCP connections are represented as a stream of bidirectional events, so
sending a message back to the sender is straightforward—once a client has connected
you can write messages to it at any time using client.write. UDP, on the other hand,
is connectionless—messages are received without an active connection to the client.

HTTP.
The HTTP protocol is stateless and built on TCP,
and Node’s HTTP module is similarly built on top of its TCP module. On of the main difference 
between TCP server and HTTP - HTTP closes socket connection as soon as it sends response,
but TCP - can keep connection while client is connected, because of duplex.